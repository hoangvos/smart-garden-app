<%- include('includes/head.ejs') %>
    <link rel="stylesheet" type="text/css" href="/css/style.css">
</head>
<body>
  <%- include('includes/navigation.ejs') %>
  <style>
    body{
      background-color: rgb(241, 242, 246);
      gap: 10px;
    }
  </style>
  <body >
    <style>
      @media (max-width: 40em) {
          body {
              display: block;
              justify-items: center;
          }
      }
    </style>
    <div class="container" style="margin-top: 10px;">
      <div class="card-header" style="  font-weight: bold; font-size: 20px; color: rgb(221, 240, 53) ;
      margin-top: 70px; margin-bottom: 20px; font-size: 30px;
      "> Brightness level realtime chart </div>
          <canvas id="myChart" style="max-width: 100%; max-height: 100%;">
          </canvas>
      </div>
    </div>
    <div class="container" style="margin-top: 10px;">
      <div class="card-header" style="  font-weight: bold; font-size: 20px; color: rgb(221, 240, 53) ;
      margin-top: 70px; margin-bottom: 20px; font-size: 30px;
      "> Brightness level chart for 1 month </div>
      <canvas id="myChart_x" style="max-width: 100%; max-height: 100%;">
  
      </canvas>
    </div>
  </body>
  <footer>
    <script src="https://www.gstatic.com/firebasejs/8.10.0/firebase-app.js"></script>
    <script src="https://www.gstatic.com/firebasejs/8.10.0/firebase-firestore.js"></script>
    <script>
      ctx = document.getElementById('myChart').getContext("2d");
      let gradient = ctx.createLinearGradient(0,0,0,50);
      
      gradient.addColorStop(0, 'rgb(221, 240, 53, 0.4)');
      var data = {
        labels : [0],
        datasets: [
          {
            label:"Brightness level",
            data: [0],
            borderColor:'rgb(221, 240, 53)',
            lineTension:0.5,
            fill:true,
            backgroundColor:gradient,
            borderColor:"rgb(221, 240, 53)"
          }
        ]
      }
      const config = {
        type:'line',
        data: data ,
        options:{
          responsive: true,
          scales:{
            y:{
              ticks:{
                callback: function(value){
                  return value + ' Lux';
                }
              }
            }
          }
        }

      }
      var mychart = new Chart(
        document.getElementById('myChart')
        ,config
      )
      const firebaseConfig = {
          apiKey: "AIzaSyCOYDfXX2g7eQ2q35H1AhrCrC9s_MedTIo",
          authDomain: "tkll-project-402e9.firebaseapp.com",
          databaseURL: "https://tkll-project-402e9-default-rtdb.firebaseio.com",
          projectId: "tkll-project-402e9",
          storageBucket: "tkll-project-402e9.appspot.com",
          messagingSenderId: "440382764725",
          appId: "1:440382764725:web:36a2190a7d05f9bf8bb0fc",
          measurementId: "G-QSDYXY6YP0"
      };
  
      // Khởi tạo Firebase
      firebase.initializeApp(firebaseConfig);
  
      // Sử dụng Firebase Firestore
      var db = firebase.firestore();

      window.setInterval(mycallback, 3000);
      function mycallback(){
        var now = new Date()
        now = now.getHours() + ":" +now.getMinutes() + ":" + now.getSeconds()
        
        data.labels.push(now)
        var dataRef = db.collection("User").doc("data");
        dataRef.get().then(function(doc) {
        if (doc.exists) {
          // Tài liệu tồn tại, bạn có thể lấy giá trị trường "temp" bằng cách sử dụng doc.data()
          var tempValue = doc.data().Humidity;
          data.datasets[0].data.push(tempValue)
        } else {
          console.log("Tài liệu không tồn tại");
        }
        }).catch(function(error) {
          console.error("Lỗi khi truy cập dữ liệu: ", error);
        });
        mychart.update()
      }



      const data_x = {
        labels: [1,3,5,7,9,11,13,15,17,18,21,23,25,27,29,31],
        datasets: [{
          label: 'Brightness level',
          data: JSON.parse('<%= JSON.stringify(list_brightness) %>'),
          backgroundColor: 
            'rgb(221, 240, 53, 0.3)',
          borderColor: 
            'rgb(221, 240, 53)',
             borderWidth: 1
        }]
      }
      const config_x = {
        type: 'bar',
        data: data_x,
        options: {
          scales: {
            y: {
              beginAtZero: true,
              ticks:{
                callback: function(value){
                  return value + ' Lux';
                }
              }
            }
          }
        },
      };
      var mychart_x = new Chart(
        document.getElementById('myChart_x')
        ,config_x
      )
    </script>
  </footer>

<%- include('includes/end.ejs') %>